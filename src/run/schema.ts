export interface JestBuilderSchema {
    tsConfig: string;
    environment: string;

    all: boolean;
    automock: boolean;
    bail: boolean;
    browser: boolean;
    cache: boolean;
    cacheDirectory: boolean;
    changedFilesWithAncestor: boolean;
    changedSince: string;
    ci: boolean;
    clearCache: boolean;
    clearMocks: boolean;
    collectCoverage: boolean;
    collectCoverageFrom: string[];
    collectCoverageOnlyFrom: string[];
    config: string;
    coverage: boolean;
    coverageDirectory: string;
    coveragePathIgnorePatterns: string[];
    coverageReporters: string[];
    coverageThreshold: string;
    debug: boolean;
    env: string;
    expand: boolean;
    findRelatedTests: boolean;
    forceExit: boolean;
    globals: string;
    globalSetup: string;
    globalTeardown: string;
    h: boolean;
    help: boolean;
    init: boolean;
    json: boolean;
    lastCommit: boolean;
    logHeapUsage: boolean;
    maxWorkers: number;
    modueDirectories: string[];
    moduleFileExtensions: string[];
    moduleLoader: string;
    moduleMapper: string;
    modulePathIgnorePatterns: string[];
    modulePaths: string[];
    name: string;
    noSCM: boolean;
    noStackTrace: boolean;
    notify: boolean;
    notifyMode: string;
    onlyChanged: boolean;
    outputFile: string;
    preset: string;
    projects: string[];
    replname: string;
    resetMocks: boolean;
    resetModules: boolean;
    resolver: string;
    restoreMocks: boolean;
    rootDir: string;
    roots: string[];
    runInBand: boolean;
    setupFiles: string[];
    setupTestFrameworkScriptFile: string;
    showConfig: boolean;
    silent: boolean;
    snapshotSerializers: string[];
    testEnvironment: string;
    testFailureExitCode: string;
    testMatch: string[];
    testNamePattern: string;
    testPathIgnorePatterns: string[];
    testPathPattern: string[];
    testRegex: string;
    testResultsProcessor: string;
    testRunner: string;
    testURL: string;
    timers: string;
    transform: string;
    transformIgnorePatterns: string[];
    unmockedModulePathPatterns: string[];
    updateSnapshot: boolean;
    useStderr: boolean;
    verbose: boolean;
    version: boolean;
    watch: boolean;
    watchAll: boolean;
    watchman: boolean;
    watchPathIgnorePatterns: string[];
}
